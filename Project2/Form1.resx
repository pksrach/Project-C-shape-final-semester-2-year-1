<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVVYAGwVZ+c8NY
        f6nCV36qwld+qsJXfqrCV36qwld+qsJXfqrCV36qwld+qsJXfqrCV36qwld+qsJXfqrCV36qwld+qsJX
        fqqfKkThpTNSgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMNX
        fpDBX4b/vYSo/7yFqf+8han/vIWp/7yFqf+8han/vIWp/7yFqf+8han/vIWp/7yFqf+8han/vIWp/7yF
        qf+8han/vIWp/5IbMf+VHjX+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwld+6rmjxf+y4P//suD//7Lg//+y4P//suD//7Lg//+y4P//suD//7Lg//+y4P//suD//7Lg
        //+y4P//suD//7Lg//+y4P//khsx/5IbMf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADCV37/srHU/6nV9/+p1ff/qdX3/6nV9/+p1ff/qdX3/6nV9/+p1ff/qdX3/6nV
        9/+p1ff/qdX3/6nV9/+p1ff/qdX3/6nV9/+SGzH/khsx/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJXfv+rnsP/kbrh/5C54P+QueD/kLng/5C54P+QueD/kLng/5C5
        4P+QueD/kLng/5C54P+QueD/kLng/5C54P+QueD/kLng/5IbMf+SGzH/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/71Qdf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADCV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMJXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADCV37/wld+/8JXfv+7mbf/uLrU/7i61P+4utT/uLrU/7i61P+4utT/uLrU/7i6
        1P+4utT/uLrU/7i61P+4utT/uLrU/754mv/CV37/wld+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJXfv/CV37/wld+/7i71f+z7P//s+z//7Ps//+z7P//s+z//7Ps
        //+z7P//s+z//7Ps//+z7P//s+z//7Ps//+z7P//vYmp/8JXfv/CV37/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwld+/8JXfv/CV37/uLvV/7Ps//+z7P//s+z//7Ps
        //+z7P//s+z//7Ps//+z7P//s+z//7Ps//+z7P//s+z//7Ps//+9ian/wld+/8JXfv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCV379wld+/8JXfv+7mrj/uLvV/7i7
        1f+4u9X/uLvV/7i71f+4u9X/uLvV/7i71f+4u9X/uLvV/7i71f+4u9X/uLvV/754mv/CV37/wld+/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJWfubCV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwld+rMJX
        fv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADFVYAwwld+9cJXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JXfv/CV37/wld+/8JX
        fv/CV37/wld+/8JXfv/CV37/wld+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC/WIAgwlZ/i8JXfbXCV327wld9u8JXfbvCV327wld9u8JXfbvCV327wld9u8JX
        fbvCV327wld9u8JXfbvCV327wld9u8JXfbvCV36SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////wAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//gAAP/8AAD////////////////8=
</value>
  </data>
</root>